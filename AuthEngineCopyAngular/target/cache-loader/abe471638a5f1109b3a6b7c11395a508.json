{"remainingRequest":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular-router-loader\\src\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\tslint-loader\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\feature\\feature.route.ts","dependencies":[{"path":"E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\feature\\feature.route.ts","mtime":1549451738779},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar core_2 = require(\"app/core\");\r\nvar rxjs_1 = require(\"rxjs\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar feature_model_1 = require(\"app/shared/model/feature.model\");\r\nvar feature_service_1 = require(\"./feature.service\");\r\nvar feature_component_1 = require(\"./feature.component\");\r\nvar feature_detail_component_1 = require(\"./feature-detail.component\");\r\nvar feature_update_component_1 = require(\"./feature-update.component\");\r\nvar feature_delete_dialog_component_1 = require(\"./feature-delete-dialog.component\");\r\nvar FeatureResolve = /** @class */ (function () {\r\n    function FeatureResolve(service) {\r\n        this.service = service;\r\n    }\r\n    FeatureResolve.prototype.resolve = function (route, state) {\r\n        var id = route.params['id'] ? route.params['id'] : null;\r\n        if (id) {\r\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (feature) { return feature.body; }));\r\n        }\r\n        return rxjs_1.of(new feature_model_1.Feature());\r\n    };\r\n    var _a;\r\n    FeatureResolve = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof feature_service_1.FeatureService !== \"undefined\" && feature_service_1.FeatureService) === \"function\" ? _a : Object])\r\n    ], FeatureResolve);\r\n    return FeatureResolve;\r\n}());\r\nexports.FeatureResolve = FeatureResolve;\r\nexports.featureRoute = [\r\n    {\r\n        path: '',\r\n        component: feature_component_1.FeatureComponent,\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Features'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/view',\r\n        component: feature_detail_component_1.FeatureDetailComponent,\r\n        resolve: {\r\n            feature: FeatureResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Features'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: 'new',\r\n        component: feature_update_component_1.FeatureUpdateComponent,\r\n        resolve: {\r\n            feature: FeatureResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Features'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: feature_update_component_1.FeatureUpdateComponent,\r\n        resolve: {\r\n            feature: FeatureResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Features'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService]\r\n    }\r\n];\r\nexports.featurePopupRoute = [\r\n    {\r\n        path: ':id/delete',\r\n        component: feature_delete_dialog_component_1.FeatureDeletePopupComponent,\r\n        resolve: {\r\n            feature: FeatureResolve\r\n        },\r\n        data: {\r\n            authorities: ['ROLE_USER'],\r\n            pageTitle: 'Features'\r\n        },\r\n        canActivate: [core_2.UserRouteAccessService],\r\n        outlet: 'popup'\r\n    }\r\n];\r\n",{"version":3,"file":"E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\feature\\feature.route.ts","sourceRoot":"","sources":["E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular-router-loader\\src\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\tslint-loader\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\feature\\feature.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,gEAAyD;AACzD,qDAAmD;AACnD,yDAAuD;AACvD,uEAAoE;AACpE,uEAAoE;AACpE,qFAAgF;AAIhF;IACI,wBAAoB,OAAuB;QAAvB,YAAO,GAAP,OAAO,CAAgB;IAAG,CAAC;IAE/C,gCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAA+B,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EACxD,eAAG,CAAC,UAAC,OAA8B,IAAK,OAAA,OAAO,CAAC,IAAI,EAAZ,CAAY,CAAC,CACxD,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,uBAAO,EAAE,CAAC,CAAC;IAC7B,CAAC;;IAZQ,cAAc;QAD1B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,gCAAc,oBAAd,gCAAc;OADlC,cAAc,CAa1B;IAAD,qBAAC;CAAA,AAbD,IAaC;AAbY,wCAAc;AAed,QAAA,YAAY,GAAW;IAChC;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oCAAgB;QAC3B,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,UAAU;SACxB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,iDAAsB;QACjC,OAAO,EAAE;YACL,OAAO,EAAE,cAAc;SAC1B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,UAAU;SACxB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,iDAAsB;QACjC,OAAO,EAAE;YACL,OAAO,EAAE,cAAc;SAC1B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,UAAU;SACxB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,iDAAsB;QACjC,OAAO,EAAE;YACL,OAAO,EAAE,cAAc;SAC1B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,UAAU;SACxB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,iBAAiB,GAAW;IACrC;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,6DAA2B;QACtC,OAAO,EAAE;YACL,OAAO,EAAE,cAAc;SAC1B;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,UAAU;SACxB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Feature } from 'app/shared/model/feature.model';\nimport { FeatureService } from './feature.service';\nimport { FeatureComponent } from './feature.component';\nimport { FeatureDetailComponent } from './feature-detail.component';\nimport { FeatureUpdateComponent } from './feature-update.component';\nimport { FeatureDeletePopupComponent } from './feature-delete-dialog.component';\nimport { IFeature } from 'app/shared/model/feature.model';\n\n@Injectable({ providedIn: 'root' })\nexport class FeatureResolve implements Resolve<IFeature> {\n    constructor(private service: FeatureService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IFeature> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(\n                filter((response: HttpResponse<Feature>) => response.ok),\n                map((feature: HttpResponse<Feature>) => feature.body)\n            );\n        }\n        return of(new Feature());\n    }\n}\n\nexport const featureRoute: Routes = [\n    {\n        path: '',\n        component: FeatureComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Features'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: ':id/view',\n        component: FeatureDetailComponent,\n        resolve: {\n            feature: FeatureResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Features'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'new',\n        component: FeatureUpdateComponent,\n        resolve: {\n            feature: FeatureResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Features'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: ':id/edit',\n        component: FeatureUpdateComponent,\n        resolve: {\n            feature: FeatureResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Features'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const featurePopupRoute: Routes = [\n    {\n        path: ':id/delete',\n        component: FeatureDeletePopupComponent,\n        resolve: {\n            feature: FeatureResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Features'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}