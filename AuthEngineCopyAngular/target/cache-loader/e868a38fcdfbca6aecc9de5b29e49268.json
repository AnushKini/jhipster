{"remainingRequest":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\ts-loader\\index.js??ref--9-3!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular-router-loader\\src\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\tslint-loader\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\role\\role-update.component.ts","dependencies":[{"path":"E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\role\\role-update.component.ts","mtime":1549451737723},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar router_1 = require(\"@angular/router\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar ng_jhipster_1 = require(\"ng-jhipster\");\r\nvar role_service_1 = require(\"./role.service\");\r\nvar privilege_1 = require(\"app/entities/privilege\");\r\nvar app_users_1 = require(\"app/entities/app-users\");\r\nvar RoleUpdateComponent = /** @class */ (function () {\r\n    function RoleUpdateComponent(jhiAlertService, roleService, privilegeService, appUsersService, activatedRoute) {\r\n        this.jhiAlertService = jhiAlertService;\r\n        this.roleService = roleService;\r\n        this.privilegeService = privilegeService;\r\n        this.appUsersService = appUsersService;\r\n        this.activatedRoute = activatedRoute;\r\n    }\r\n    RoleUpdateComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(function (_a) {\r\n            var role = _a.role;\r\n            _this.role = role;\r\n        });\r\n        this.privilegeService\r\n            .query({ filter: 'role(rolename)-is-null' })\r\n            .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n            .subscribe(function (res) {\r\n            if (!_this.role.privilege || !_this.role.privilege.id) {\r\n                _this.privileges = res;\r\n            }\r\n            else {\r\n                _this.privilegeService\r\n                    .find(_this.role.privilege.id)\r\n                    .pipe(operators_1.filter(function (subResMayBeOk) { return subResMayBeOk.ok; }), operators_1.map(function (subResponse) { return subResponse.body; }))\r\n                    .subscribe(function (subRes) { return (_this.privileges = [subRes].concat(res)); }, function (subRes) { return _this.onError(subRes.message); });\r\n            }\r\n        }, function (res) { return _this.onError(res.message); });\r\n        this.appUsersService\r\n            .query()\r\n            .pipe(operators_1.filter(function (mayBeOk) { return mayBeOk.ok; }), operators_1.map(function (response) { return response.body; }))\r\n            .subscribe(function (res) { return (_this.appusers = res); }, function (res) { return _this.onError(res.message); });\r\n    };\r\n    RoleUpdateComponent.prototype.previousState = function () {\r\n        window.history.back();\r\n    };\r\n    RoleUpdateComponent.prototype.save = function () {\r\n        this.isSaving = true;\r\n        if (this.role.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.roleService.update(this.role));\r\n        }\r\n        else {\r\n            this.subscribeToSaveResponse(this.roleService.create(this.role));\r\n        }\r\n    };\r\n    RoleUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\r\n        var _this = this;\r\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\r\n    };\r\n    RoleUpdateComponent.prototype.onSaveSuccess = function () {\r\n        this.isSaving = false;\r\n        this.previousState();\r\n    };\r\n    RoleUpdateComponent.prototype.onSaveError = function () {\r\n        this.isSaving = false;\r\n    };\r\n    RoleUpdateComponent.prototype.onError = function (errorMessage) {\r\n        this.jhiAlertService.error(errorMessage, null, null);\r\n    };\r\n    RoleUpdateComponent.prototype.trackPrivilegeById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    RoleUpdateComponent.prototype.trackAppUsersById = function (index, item) {\r\n        return item.id;\r\n    };\r\n    RoleUpdateComponent.prototype.getSelected = function (selectedVals, option) {\r\n        if (selectedVals) {\r\n            for (var i = 0; i < selectedVals.length; i++) {\r\n                if (option.id === selectedVals[i].id) {\r\n                    return selectedVals[i];\r\n                }\r\n            }\r\n        }\r\n        return option;\r\n    };\r\n    var _a, _b, _c, _d, _e;\r\n    RoleUpdateComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-role-update',\r\n            templateUrl: './role-update.component.html'\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof role_service_1.RoleService !== \"undefined\" && role_service_1.RoleService) === \"function\" ? _b : Object, typeof (_c = typeof privilege_1.PrivilegeService !== \"undefined\" && privilege_1.PrivilegeService) === \"function\" ? _c : Object, typeof (_d = typeof app_users_1.AppUsersService !== \"undefined\" && app_users_1.AppUsersService) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object])\r\n    ], RoleUpdateComponent);\r\n    return RoleUpdateComponent;\r\n}());\r\nexports.RoleUpdateComponent = RoleUpdateComponent;\r\n",{"version":3,"file":"E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\role\\role-update.component.ts","sourceRoot":"","sources":["E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\angular-router-loader\\src\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\node_modules\\tslint-loader\\index.js!E:\\JHipster\\AuthEngineCopyAngular\\src\\main\\webapp\\app\\entities\\role\\role-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { JhiAlertService } from 'ng-jhipster';\nimport { IRole } from 'app/shared/model/role.model';\nimport { RoleService } from './role.service';\nimport { IPrivilege } from 'app/shared/model/privilege.model';\nimport { PrivilegeService } from 'app/entities/privilege';\nimport { IAppUsers } from 'app/shared/model/app-users.model';\nimport { AppUsersService } from 'app/entities/app-users';\n\n@Component({\n    selector: 'jhi-role-update',\n    templateUrl: './role-update.component.html'\n})\nexport class RoleUpdateComponent implements OnInit {\n    role: IRole;\n    isSaving: boolean;\n\n    privileges: IPrivilege[];\n\n    appusers: IAppUsers[];\n\n    constructor(\n        protected jhiAlertService: JhiAlertService,\n        protected roleService: RoleService,\n        protected privilegeService: PrivilegeService,\n        protected appUsersService: AppUsersService,\n        protected activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ role }) => {\n            this.role = role;\n        });\n        this.privilegeService\n            .query({ filter: 'role(rolename)-is-null' })\n            .pipe(\n                filter((mayBeOk: HttpResponse<IPrivilege[]>) => mayBeOk.ok),\n                map((response: HttpResponse<IPrivilege[]>) => response.body)\n            )\n            .subscribe(\n                (res: IPrivilege[]) => {\n                    if (!this.role.privilege || !this.role.privilege.id) {\n                        this.privileges = res;\n                    } else {\n                        this.privilegeService\n                            .find(this.role.privilege.id)\n                            .pipe(\n                                filter((subResMayBeOk: HttpResponse<IPrivilege>) => subResMayBeOk.ok),\n                                map((subResponse: HttpResponse<IPrivilege>) => subResponse.body)\n                            )\n                            .subscribe(\n                                (subRes: IPrivilege) => (this.privileges = [subRes].concat(res)),\n                                (subRes: HttpErrorResponse) => this.onError(subRes.message)\n                            );\n                    }\n                },\n                (res: HttpErrorResponse) => this.onError(res.message)\n            );\n        this.appUsersService\n            .query()\n            .pipe(\n                filter((mayBeOk: HttpResponse<IAppUsers[]>) => mayBeOk.ok),\n                map((response: HttpResponse<IAppUsers[]>) => response.body)\n            )\n            .subscribe((res: IAppUsers[]) => (this.appusers = res), (res: HttpErrorResponse) => this.onError(res.message));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.role.id !== undefined) {\n            this.subscribeToSaveResponse(this.roleService.update(this.role));\n        } else {\n            this.subscribeToSaveResponse(this.roleService.create(this.role));\n        }\n    }\n\n    protected subscribeToSaveResponse(result: Observable<HttpResponse<IRole>>) {\n        result.subscribe((res: HttpResponse<IRole>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    protected onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    protected onSaveError() {\n        this.isSaving = false;\n    }\n\n    protected onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackPrivilegeById(index: number, item: IPrivilege) {\n        return item.id;\n    }\n\n    trackAppUsersById(index: number, item: IAppUsers) {\n        return item.id;\n    }\n\n    getSelected(selectedVals: Array<any>, option: any) {\n        if (selectedVals) {\n            for (let i = 0; i < selectedVals.length; i++) {\n                if (option.id === selectedVals[i].id) {\n                    return selectedVals[i];\n                }\n            }\n        }\n        return option;\n    }\n}\n"]}]}